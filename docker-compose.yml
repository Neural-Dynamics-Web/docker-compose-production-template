services:
  db:
    container_name: projectTitle-postgres
    image: postgres:14.0-alpine
    command: -c 'max_connections=10000'
    restart: always
    env_file:
      - .env
      - .env.psql
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
    networks:
      - private
    volumes:
      - pg_data:/var/lib/postgresql/data/

  redis:
    container_name: projectTitle-redis
    image: redis:6.2-alpine
    command: redis-server --save 20 1 --loglevel warning
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - private
    volumes:
      - redis_data:/data

  backend:
    container_name: projectTitle-backend
    image: ghcr.io/neural-dynamics-web/freestream-aircraft-backend:7dca6113224566fe633a4a62d00639c4ba9196b8
    command: uvicorn --host 0.0.0.0 --port 8000 --workers 4 website.asgi:app
    restart: always
    env_file:
      - .env
      - .env.backend
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/docs", "||", "exit", "1" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - private
      - public
    volumes:
      - back_static:/app/allstaticfiles
      - back_media:/app/media

  frontend:
    container_name: projectTitle-frontend
    image: ghcr.io/neural-dynamics-web/freestream-aircraft-backend:7dca6113224566fe633a4a62d00639c4ba9196b8
    restart: always
    env_file:
      - .env
      - .env.frontend
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:5000/healthcheck", "||", "exit", "1" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - public

  nginx-proxy:
    container_name: projectTitle-nginx-proxy
    image: jonasal/nginx-certbot:3.0.0-nginx1.21.3
    restart: always
    env_file:
      - .env
      - .env.proxy
    volumes:
      - ./nginx/:/etc/nginx/templates:ro
      - nginx_secrets:/etc/letsencrypt
      - back_static:/app/allstaticfiles
      - back_media:/app/media
    ports:
      - 80:80
      - 443:443
    depends_on:
      - frontend
      - backend
    networks:
      - public

volumes:
  pg_data:
    driver: local
  redis_data:
    driver: local
  nginx_secrets:
    driver: local
  back_static:
    driver: local
  back_media:
    driver: local

networks:
  private:
  public:
